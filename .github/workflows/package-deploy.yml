name: package-deploy

on:
  push:
    branches:
      - production

env:
  NODE_VERSION: '22.x'
  PNPM_VERSION: '10.x'

jobs:
  publish-npm-registry:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Check version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          if git tag --list | grep -q "v$CURRENT_VERSION"; then
            echo "version-changed=false" >> $GITHUB_OUTPUT
          else
            echo "version-changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Git Tag
        if: steps.version-check.outputs.version-changed == 'true' && github.ref == 'refs/heads/production'
        run: |
          VERSION=${{ steps.version-check.outputs.current-version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"

      - name: Publish to GitHub Package Registry
        if: steps.version-check.outputs.version-changed == 'true'
        run: |
          echo "Publishing packages to GitHub Package Registry..."
          pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
